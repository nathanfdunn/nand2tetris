// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=mLoadA, b=mLoadB, c=mLoadC, d=mLoadD, 
    	e=mLoadE, f=mLoadF, g=mLoadG, h=mLoadH);

    Register(in=in, out=mOutA, load=mLoadA);
    Register(in=in, out=mOutB, load=mLoadB);
    Register(in=in, out=mOutC, load=mLoadC);
    Register(in=in, out=mOutD, load=mLoadD);
    Register(in=in, out=mOutE, load=mLoadE);
    Register(in=in, out=mOutF, load=mLoadF);
    Register(in=in, out=mOutG, load=mLoadG);
    Register(in=in, out=mOutH, load=mLoadH);

    Mux8Way16(a=mOutA, b=mOutB, c=mOutC, d=mOutD, e=mOutE, f=mOutF, g=mOutG, h=mOutH,
    	sel=address, out=out);
}