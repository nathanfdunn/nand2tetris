// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=mLoadA, b=mLoadB, c=mLoadC, d=mLoadD, 
    	e=mLoadE, f=mLoadF, g=mLoadG, h=mLoadH);

    RAM64(in=in, out=mOutA, load=mLoadA, address=address[3..8]);
    RAM64(in=in, out=mOutB, load=mLoadB, address=address[3..8]);
    RAM64(in=in, out=mOutC, load=mLoadC, address=address[3..8]);
    RAM64(in=in, out=mOutD, load=mLoadD, address=address[3..8]);
    RAM64(in=in, out=mOutE, load=mLoadE, address=address[3..8]);
    RAM64(in=in, out=mOutF, load=mLoadF, address=address[3..8]);
    RAM64(in=in, out=mOutG, load=mLoadG, address=address[3..8]);
    RAM64(in=in, out=mOutH, load=mLoadH, address=address[3..8]);

    Mux8Way16(a=mOutA, b=mOutB, c=mOutC, d=mOutD, e=mOutE, f=mOutF, g=mOutG, h=mOutH,
    	sel=address[0..2], out=out);
}