class Board {
    field Array ranks;


    constructor Board new(){
        var int i;
        var Array temp;
        let i = 0;
        let ranks = Array.new(8);

        while (i < 8){
            let ranks[i] = Array.new(8);
            let i = i + 1;
        }

        let temp = ranks[0];
        let temp[0] = Piece.rook(false);
        let temp[1] = Piece.knight(false);
        let temp[2] = Piece.bishop(false);
        let temp[3] = Piece.queen(false);
        let temp[4] = Piece.king(false);
        let temp[5] = Piece.bishop(false);
        let temp[6] = Piece.knight(false);
        let temp[7] = Piece.rook(false);

        let temp = ranks[1];
        let temp[0] = Piece.pawn(false);
        let temp[1] = Piece.pawn(false);
        let temp[2] = Piece.pawn(false);
        let temp[3] = Piece.pawn(false);
        let temp[4] = Piece.pawn(false);
        let temp[5] = Piece.pawn(false);
        let temp[6] = Piece.pawn(false);
        let temp[7] = Piece.pawn(false);

        let temp = ranks[6];
        let temp[0] = Piece.pawn(true);
        let temp[1] = Piece.pawn(true);
        let temp[2] = Piece.pawn(true);
        let temp[3] = Piece.pawn(true);
        let temp[4] = Piece.pawn(true);
        let temp[5] = Piece.pawn(true);
        let temp[6] = Piece.pawn(true);
        let temp[7] = Piece.pawn(true);

        let temp = ranks[7];
        let temp[0] = Piece.rook(true);
        let temp[1] = Piece.knight(true);
        let temp[2] = Piece.bishop(true);
        let temp[3] = Piece.queen(true);
        let temp[4] = Piece.king(true);
        let temp[5] = Piece.bishop(true);
        let temp[6] = Piece.knight(true);
        let temp[7] = Piece.rook(true);


        return this;
    }

    method boolean isEven(int blah){

        return (blah - (2 * (blah / 2))) > 0;
    }

    method void print(){
        var int i;
        var int j;
        var Array rank;
        var Piece piece;
        var boolean color;
        var boolean squareColor;
        var int dim;
        var int x1;
        var int x2;
        var int y1;
        var int y2;

        let i = 0;
        let color = true;
        let dim = 32;

        while (i < 8){
            let j = 0;
            while (j < 8){
                let squareColor = ~isEven(i + j);
                let color =squareColor;
                do Screen.setColor(color);
                // Add 8 to draw the board on the right side
                let x1 = (j + 8) * dim;
                let y1 = i * dim;
                let x2 = x1 + dim;
                let y2 = y1 + dim;

                do Screen.drawRectangle(x1, y1, x2-1, y2-1);

                // Open up a white center for black squares
                // let color = false;
                // if (color){
                //     let x1 = x1 + (dim / 4);
                //     let y1 = y1 + (dim / 4);
                //     let x2 = x2 - (dim / 4);
                //     let y2 = y2 - (dim / 4);

                //     do Screen.setColor(~color);
                //     do Screen.drawRectangle(x1, y1, x2, y2);
                // }

                let rank = ranks[i];
                let piece = rank[j];
                //do Screen.drawRectangle(x1, y1)
                if (~(piece = 0)){
                    do piece.draw(x1, y1, squareColor);
                }


                let j = j + 1;
            }

            let i = i + 1;
        }

        //return;

        

        // while (i < 8){
        //     let rank = ranks[i];
        //     let j = 0;
        //     while (j < 8){
        //         let piece = rank[j];
        //         let color = isEven(i + j);

        //         if (color){
        //             do Output.printString(" ");
        //         }
        //         else{
        //             do Output.printString("[");
        //         }

        //         if (piece = 0){
        //             do Output.printString(" ");
        //         }
        //         else{
        //             do Output.printString(piece.toString());
        //         }

        //         if (color){
        //             do Output.printString(" ");
        //         }
        //         else{
        //             do Output.printString("]");
        //         }


        //         let j = j + 1;
        //     }

        //     do Output.println();
        //     do Output.println();
        //     //do Output.println();

        //     let i = i + 1;
        // }

        return;
    }

}