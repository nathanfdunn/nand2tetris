
// Refers to a square on the board...
// But also kind of a vector
class Square {
	
	field int x;
	field int y;

	constructor Square fromBoardIndices(int x_, int y_) {
		let x = x_;
		let y = y_;
		return this;
	}

	method Square add(int xOff, int yOff) {
		return Square.fromBoardIndices(x + xOff, y + yOff);
	}

	// Creates a new square
	method Square addSquare(Square other) {
		return Square.fromBoardIndices(x + other.getX(), y + other.getY());
	}

	method int getX() {
		return x;
	}

	method int getY() {
		return y;
	}

	method Square multiplyScalar(int scalar) {
		return Square.fromBoardIndices(
			Math.multiply(scalar, x), 
			Math.multiply(scalar, y)
		);
	}

	method boolean isOnBoard() {
		return (x > -1) &
				(x < 8) &
				(y > -1) &
				(y < 8);
	}

	method String toString() {
		var String ret;
		let ret = String.new(5);
		if (x < 0) {
			do ret.appendChar(45);		// '-'
			do ret.appendChar(Util.digitToChar(-x));
		}
		else {
			do ret.appendChar(32);		// ' '
			do ret.appendChar(Util.digitToChar(x));
		}

		do ret.appendChar(44);		// ','

		if (y < 0) {
			do ret.appendChar(45);		// '-'
			do ret.appendChar(Util.digitToChar(-y));
		}
		else {
			do ret.appendChar(32);		// ' '
			do ret.appendChar(Util.digitToChar(y));
		}

		return ret;
	}
}