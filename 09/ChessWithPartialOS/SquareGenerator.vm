function SquareGenerator.getP0 1
push constant 1
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 0
push constant 1
call Square.fromBoardIndices 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function SquareGenerator.getP1 0
push argument 0
push argument 0
push constant 1
push constant 1
neg
call SquareGenerator.multiplyScalar 3
push constant 1
call SquareGenerator.zipUnion 3
return
function SquareGenerator.getWazir 0
push argument 0
push argument 0
push constant 2
call SquareGenerator.transposeElements 2
push constant 2
call SquareGenerator.zipUnion 3
return
function SquareGenerator.getFerz 0
push argument 0
push argument 0
push constant 4
push constant 0
not
call SquareGenerator.addElements 4
return
function SquareGenerator.init 4
call SquareGenerator.getP0 0
pop local 0
push local 0
push constant 1
call SquareGenerator.printSquares 2
pop temp 0
push local 0
call SquareGenerator.getP1 1
pop local 1
push local 1
push constant 2
call SquareGenerator.printSquares 2
pop temp 0
push local 1
call SquareGenerator.getWazir 1
pop local 2
push local 2
push constant 4
call SquareGenerator.printSquares 2
pop temp 0
push local 2
call SquareGenerator.getFerz 1
pop local 3
push local 3
push constant 4
call SquareGenerator.printSquares 2
pop temp 0
push local 2
push local 3
push constant 4
call SquareGenerator.zipUnion 3
pop static 0
push static 0
push static 0
push constant 8
push constant 0
not
call SquareGenerator.addElements 4
pop static 4
push local 3
push constant 4
call SquareGenerator.riderClosure 2
pop static 2
push local 2
push constant 4
call SquareGenerator.riderClosure 2
pop static 3
push static 0
push constant 8
call SquareGenerator.riderClosure 2
pop static 1
push constant 0
return
function SquareGenerator.printSquares 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 1
lt
not
if-goto WHILE_END0
push local 1
push argument 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
call String.new 1
push constant 78
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 76
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
call Square.toString 1
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function SquareGenerator.getRiderDist 0
push constant 8
return
function SquareGenerator.getRiderDistForPiece 0
push argument 0
call Piece.isKnight 1
push argument 0
call Piece.isKing 1
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
call SquareGenerator.getRiderDist 0
return
function SquareGenerator.riderClosure 6
call SquareGenerator.getRiderDist 0
pop local 2
push local 2
push argument 1
call Math.multiply 2
call Array.new 1
pop local 0
push constant 0
pop local 4
push argument 1
call Array.new 1
pop local 1
push constant 0
pop local 5
label WHILE_EXP0
push local 5
push argument 1
lt
not
if-goto WHILE_END0
push local 5
push local 1
add
push constant 0
push constant 0
call Square.fromBoardIndices 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 3
label WHILE_EXP1
push local 3
push local 2
lt
not
if-goto WHILE_END1
push argument 0
push local 1
push argument 1
push constant 0
call SquareGenerator.addElements 4
pop local 1
push constant 0
pop local 5
label WHILE_EXP2
push local 5
push argument 1
lt
not
if-goto WHILE_END2
push local 4
push local 0
add
push local 5
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP2
label WHILE_END2
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 0
return
function SquareGenerator.zipUnion 1
push constant 2
push argument 2
call Math.multiply 2
call Array.new 1
pop local 0
push argument 2
push constant 1
sub
pop argument 2
label WHILE_EXP0
push argument 2
push constant 1
neg
gt
not
if-goto WHILE_END0
push constant 2
push argument 2
call Math.multiply 2
push local 0
add
push argument 2
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
call Math.multiply 2
push constant 1
add
push local 0
add
push argument 2
push argument 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push constant 1
sub
pop argument 2
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function SquareGenerator.addElements 4
push argument 2
call Array.new 1
pop local 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push argument 2
lt
not
if-goto WHILE_END0
push argument 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push argument 2
call Util.modularIncrement 2
pop local 3
goto IF_END0
label IF_FALSE0
push local 2
pop local 3
label IF_END0
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 1
push local 2
push local 0
add
push local 1
push local 3
push argument 1
add
pop pointer 1
push that 0
call Square.addSquare 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function SquareGenerator.transposeElements 2
push argument 1
call Array.new 1
pop local 0
push argument 1
push constant 1
sub
pop argument 1
label WHILE_EXP0
push argument 1
push constant 1
neg
gt
not
if-goto WHILE_END0
push argument 1
push argument 0
add
pop pointer 1
push that 0
pop local 1
push argument 1
push local 0
add
push local 1
call Square.getY 1
push local 1
call Square.getX 1
call Square.fromBoardIndices 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function SquareGenerator.multiplyScalar 2
push argument 1
call Array.new 1
pop local 0
push argument 1
push constant 1
sub
pop argument 1
label WHILE_EXP0
push argument 1
push constant 1
neg
gt
not
if-goto WHILE_END0
push argument 1
push argument 0
add
pop pointer 1
push that 0
pop local 1
push argument 1
push local 0
add
push local 1
push argument 2
call Square.multiplyScalar 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function SquareGenerator.getOffsetsByPiece 0
push argument 0
call Piece.isKing 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 0
push constant 8
call List.newFromArray 2
return
label IF_FALSE0
push argument 0
call Piece.isKnight 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 4
push constant 8
call List.newFromArray 2
return
label IF_FALSE1
push argument 0
call Piece.isBishop 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 2
call SquareGenerator.getRiderDist 0
push constant 4
call Math.multiply 2
call List.newFromArray 2
return
label IF_FALSE2
push argument 0
call Piece.isRook 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push static 3
call SquareGenerator.getRiderDist 0
push constant 4
call Math.multiply 2
call List.newFromArray 2
return
label IF_FALSE3
push argument 0
call Piece.isQueen 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push static 1
call SquareGenerator.getRiderDist 0
push constant 8
call Math.multiply 2
call List.newFromArray 2
return
label IF_FALSE4
push constant 0
return
